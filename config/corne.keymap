/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define WINDOWS 0
#define MAC 1
#define NUMBERS 2
#define SPECIAL 3
#define SPECIAL_MC 4
#define CONFIG 5

/ {
        keymap {
                compatible = "zmk,keymap";
                win_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ñ  | ESC  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | MO5  |
//                | ALT | SPC | NUMBERS |   | SPECIAL | ENT  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P     &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI  &kp ESC
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp SLASH &mo CONFIG
            &kp LALT &kp SPACE &mo NUMBERS   &mo SPECIAL  &kp RET &kp LGUI
                        >;
                };

                mac_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ñ  | ESC  |
// | ALT  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | MO5  |
//                | GUI | SPC | NUMBERS |   | SPECIAL | ENT  | CTRL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P     &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI  &kp ESC
   &kp LALT  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp SLASH  &mo CONFIG
           &kp LGUI &kp SPACE &mo NUMBERS   &mo SPECIAL_MC  &kp RET &kp LCTRL
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  |   |  1 |  2   |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | BSPC |
// | SHFT | BM | SUPR | PS  |  ¿  |  ?  |   | LFT | DWN  |  UP | RGT |  ´  |   +  |
// | CTRL |  < |      |     |  ¡  |  !  |   |     | RALT |  ?  |  ¡  |  {  |   }  |
//                | ALT | SPC | NUMBERS |   | SPECIAL | ENT  | GUI |
                        bindings = <
   &kp GRAVE  &kp N1    &kp N2   &kp N3     &kp N4        &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &trans
   &trans     &kp CAPS  &kp DEL  &kp PSCRN  &kp EQUAL     &kp LS(MINUS) &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp LBKT &kp RBKT
   &trans     &kp NUBS  &none    &none      &kp LS(EQUAL) &kp LS(N1)    &none     &kp RALT  &kp MINUS &kp EQUAL &kp SQT  &kp NUHS
                        &trans    &trans     &none    &none   &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | F1   |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10  |  F11  | BSPC |
// |   ~  |   <  |  [   |   {  |  (   |   '  |   "  |   )  |   }  |   ]   |   >   | F12  |
// | CTRL |      |      |   %  |  *   |   =  |   #  |   +  |   &  |   /   |       |      |
//                    | ALT | SPC | MO1 |   | MO2 | ENT | GUI |
                        bindings = <
   &kp F1       &kp F2        &kp F3      &kp F4     &kp F5       &kp F6       &kp F7     &kp F8     &kp F9     &kp F10      &kp F11      &kp BSPC
   &kp RA(RBKT) &kp NUBS      &kp LS(SQT) &kp SQT    &kp LS(N8)   &kp MINUS    &kp LS(N2) &kp LS(N9) &kp NUHS   &kp LS(NUHS) &kp LS(NUBS) &kp F12
   &trans       &kp RA(MINUS) &none       &kp LS(N5) &kp LS(RBKT) &kp LS(N0)   &kp LS(N3) &kp RBKT   &kp LS(N6) &kp LS(N7)   &none        &none
                                &trans  &trans  &none   &none   &trans    &trans
                        >;
                };

                special_mc_layer {
                        //Este es el de teclas especiales para mac
// -----------------------------------------------------------------------------------------
// | F1   |  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10  |  F11  | BSPC |
// |   ~  |   <  |  [   |   {  |  (   |   '  |   "  |   )  |   }  |   ]   |   >   | F12  |
// | CTRL |      |      |   %  |  *   |   =  |   #  |   +  |   &  |   /   |       |      |
//                    | ALT | SPC | MO1 |   | MO2 | ENT | GUI |
                        bindings = <
   &kp F1       &kp F2        &kp F3      &kp F4     &kp F5       &kp F6       &kp F7     &kp F8     &kp F9     &kp F10      &kp F11       &kp BSPC
   &kp RA(RBKT) &kp GRAVE     &kp LS(SQT) &kp SQT    &kp LS(N8)   &kp MINUS    &kp LS(N2) &kp LS(N9) &kp NUHS   &kp LS(NUHS) &kp LS(GRAVE) &kp F12
   &trans       &kp RA(MINUS) &none       &kp LS(N5) &kp LS(RBKT) &kp LS(N0)   &kp LS(N3) &kp RBKT   &kp LS(N6) &kp LS(N7)   &none         &none
                                &trans  &trans  &none   &none   &trans    &trans
                        >;
                };

                config_layer {
// -----------------------------------------------------------------------------------------
// |  WIN  |    |    |    |    |         |   |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |    |
// |       |    |    |    |    |         |   |  BDW  |  BUP  |  PREV | PAUSE |  NEXT |    |
// |       |    |    |    |    |  BTCRL  |   |       |       |  MUTE | VOLDN | VOLUP |    |
//                    | ALT | SPC | MO1 |   | MO2 | ENT | GUI |
                        bindings = <
   &tog MAC &none  &none &none &none &none        &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4  &none
   &none    &none  &none &none &none &none        &kp C_BRI_DN  &kp C_BRI_UP &kp C_PREV   &kp C_PP      &kp C_NEXT    &none
   &none    &none  &none &none &none &bt BT_CLR   &none         &none        &kp C_MUTE   &kp C_VOL_DN  &kp C_VOL_UP  &none
                                &trans  &trans  &none   &none   &trans    &trans
                        >;
                };
        };
};
